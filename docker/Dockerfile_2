# 使用之前构建好的 base+builder 镜像
FROM mycompany/ragflow-base:latest AS builder

# production stage
FROM builder AS production
USER root

WORKDIR /ragflow

# Copy Python environment and packages
ENV VIRTUAL_ENV=/ragflow/.venv
COPY --from=builder ${VIRTUAL_ENV} ${VIRTUAL_ENV}
ENV PATH="${VIRTUAL_ENV}/bin:${PATH}"

ENV PYTHONPATH=/ragflow/

COPY web web
COPY api api
COPY conf conf
COPY deepdoc deepdoc
COPY rag rag
COPY agent agent
COPY graphrag graphrag
COPY agentic_reasoning agentic_reasoning
COPY pyproject.toml uv.lock ./
COPY mcp mcp
COPY plugin plugin

#COPY docker/service_conf.yaml.template ./conf/service_conf.yaml.template
#COPY docker/entrypoint.sh ./
#RUN chmod +x ./entrypoint*.sh

# Copy compiled web pages
#COPY --from=builder /ragflow/web/dist /ragflow/web/dist
#
#COPY --from=builder /ragflow/VERSION /ragflow/VERSION
ENTRYPOINT ["./entrypoint.sh"]


# docker build -t mycompany/ragflow-app:latest -f Dockerfile_2 .
  #docker push mycompany/ragflow-app:latest

# # 构建基础镜像（仅当依赖变更时执行）
  #docker build -t mycompany/ragflow-base:latest -f Dockerfile.base .
  #
  ## 构建最终应用镜像（每次代码更改都执行）
  #docker build -t mycompany/ragflow-app:latest -f Dockerfile.prod .